/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PrijavaIndexRouteImport } from './routes/prijava.index'
import { Route as NovicaArticle_slugIndexRouteImport } from './routes/novica/$article_slug/index'
import { Route as AdminOsnutkiIndexRouteImport } from './routes/admin/osnutki.index'
import { Route as AdminOsnutkiDraft_idIndexRouteImport } from './routes/admin/osnutki.$draft_id.index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth.$'

const rootServerRouteImport = createServerRootRoute()

const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PrijavaIndexRoute = PrijavaIndexRouteImport.update({
  id: '/prijava/',
  path: '/prijava/',
  getParentRoute: () => rootRouteImport,
} as any)
const NovicaArticle_slugIndexRoute = NovicaArticle_slugIndexRouteImport.update({
  id: '/novica/$article_slug/',
  path: '/novica/$article_slug/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminOsnutkiIndexRoute = AdminOsnutkiIndexRouteImport.update({
  id: '/osnutki/',
  path: '/osnutki/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminOsnutkiDraft_idIndexRoute =
  AdminOsnutkiDraft_idIndexRouteImport.update({
    id: '/osnutki/$draft_id/',
    path: '/osnutki/$draft_id/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/prijava': typeof PrijavaIndexRoute
  '/admin/osnutki': typeof AdminOsnutkiIndexRoute
  '/novica/$article_slug': typeof NovicaArticle_slugIndexRoute
  '/admin/osnutki/$draft_id': typeof AdminOsnutkiDraft_idIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/prijava': typeof PrijavaIndexRoute
  '/admin/osnutki': typeof AdminOsnutkiIndexRoute
  '/novica/$article_slug': typeof NovicaArticle_slugIndexRoute
  '/admin/osnutki/$draft_id': typeof AdminOsnutkiDraft_idIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/prijava/': typeof PrijavaIndexRoute
  '/admin/osnutki/': typeof AdminOsnutkiIndexRoute
  '/novica/$article_slug/': typeof NovicaArticle_slugIndexRoute
  '/admin/osnutki/$draft_id/': typeof AdminOsnutkiDraft_idIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/prijava'
    | '/admin/osnutki'
    | '/novica/$article_slug'
    | '/admin/osnutki/$draft_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/prijava'
    | '/admin/osnutki'
    | '/novica/$article_slug'
    | '/admin/osnutki/$draft_id'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/prijava/'
    | '/admin/osnutki/'
    | '/novica/$article_slug/'
    | '/admin/osnutki/$draft_id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  PrijavaIndexRoute: typeof PrijavaIndexRoute
  NovicaArticle_slugIndexRoute: typeof NovicaArticle_slugIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/prijava/': {
      id: '/prijava/'
      path: '/prijava'
      fullPath: '/prijava'
      preLoaderRoute: typeof PrijavaIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/novica/$article_slug/': {
      id: '/novica/$article_slug/'
      path: '/novica/$article_slug'
      fullPath: '/novica/$article_slug'
      preLoaderRoute: typeof NovicaArticle_slugIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/osnutki/': {
      id: '/admin/osnutki/'
      path: '/osnutki'
      fullPath: '/admin/osnutki'
      preLoaderRoute: typeof AdminOsnutkiIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/osnutki/$draft_id/': {
      id: '/admin/osnutki/$draft_id/'
      path: '/osnutki/$draft_id'
      fullPath: '/admin/osnutki/$draft_id'
      preLoaderRoute: typeof AdminOsnutkiDraft_idIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AdminRouteRouteChildren {
  AdminOsnutkiIndexRoute: typeof AdminOsnutkiIndexRoute
  AdminOsnutkiDraft_idIndexRoute: typeof AdminOsnutkiDraft_idIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminOsnutkiIndexRoute: AdminOsnutkiIndexRoute,
  AdminOsnutkiDraft_idIndexRoute: AdminOsnutkiDraft_idIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  PrijavaIndexRoute: PrijavaIndexRoute,
  NovicaArticle_slugIndexRoute: NovicaArticle_slugIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
